from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.utils import executor

# === –í–ê–ñ–ù–û: —Ç–æ–∫–µ–Ω –∏ chat_id —É–∂–µ –≤—Å—Ç–∞–≤–ª–µ–Ω—ã ===
TOKEN = "8053516713:AAHiRPoKBXqqV6vZpChX2W8nAhFswB5TQ64"
GROUP_CHAT_ID = -4886669467  # ID –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã/–∫–∞–Ω–∞–ª–∞

bot = Bot(token=TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —à–∞–≥–∏ –¥–∏–∞–ª–æ–≥–∞
class Form(StatesGroup):
    full_name = State()
    birth_date = State()
    problem = State()
    phone = State()

# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@dp.message_handler(commands="start")
async def start(message: types.Message):
    await message.answer(
        "–†–∞–¥ –í–∞—à–µ–º—É –æ–±—Ä–∞—â–µ–Ω–∏—é! –û—Ç–≤–µ—Ç—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞ —ç—Ç–∏ –≤–æ–ø—Ä–æ—Å—ã, "
        "—á—Ç–æ–±—ã –º–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –º–æ–≥ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –í–∞–º–∏ –∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.\n\n"
        "1Ô∏è‚É£ –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç? (–§–∞–º–∏–ª–∏—è, –∏–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ)"
    )
    await Form.full_name.set()

# –§–ò–û
@dp.message_handler(state=Form.full_name)
async def process_fullname(message: types.Message, state: FSMContext):
    await state.update_data(full_name=message.text)
    await message.answer("2Ô∏è‚É£ –í–∞—à–∞ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è (—á–∏—Å–ª–æ, –º–µ—Å—è—Ü, –≥–æ–¥):")
    await Form.birth_date.set()

# –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
@dp.message_handler(state=Form.birth_date)
async def process_birth(message: types.Message, state: FSMContext):
    await state.update_data(birth_date=message.text)
    await message.answer(
        "3Ô∏è‚É£ –û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∫—Ä–∞—Ç–∫–æ.\n"
        "(–ï—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å –¥–∏–∞–≥–Ω–æ–∑ ‚Äî —É–∫–∞–∂–∏—Ç–µ –µ–≥–æ, –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî –æ–ø–∏—à–∏—Ç–µ —Å–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏. "
        "–ù–∞–ø—Ä–∏–º–µ—Ä: ¬´—É–ø–ª–æ—Ç–Ω–µ–Ω–∏–µ –≤ –≥—Ä—É–¥–∏¬ª –∏–ª–∏ ¬´—Å—Ç—Ä–∞–Ω–Ω–∞—è —Ä–æ–¥–∏–Ω–∫–∞¬ª)"
    )
    await Form.problem.set()

# –ü—Ä–æ–±–ª–µ–º–∞
@dp.message_handler(state=Form.problem)
async def process_problem(message: types.Message, state: FSMContext):
    await state.update_data(problem=message.text)
    await message.answer("4Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –¥–ª—è –Ω–∞—à–µ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞:")
    await Form.phone.set()

# –¢–µ–ª–µ—Ñ–æ–Ω + –∏—Ç–æ–≥
@dp.message_handler(state=Form.phone)
async def process_phone(message: types.Message, state: FSMContext):
    await state.update_data(phone=message.text)
    data = await state.get_data()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏
    text = (
        "üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n"
        f"üë§ –§–ò–û: {data['full_name']}\n"
        f"üéÇ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {data['birth_date']}\n"
        f"üìù –ü—Ä–æ–±–ª–µ–º–∞: {data['problem']}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –≥—Ä—É–ø–ø—É
    await bot.send_message(chat_id=GROUP_CHAT_ID, text=text)

    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã, –Ω–∞—à –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.")

    await state.finish()

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
